@import url('https://fonts.googleapis.com/css2?family=Spectral:wght@700&display=swap');

* {
  box-sizing: border-box;/*ele vai somar sempre o padding e o border ao height e ao width*/
}

body {
  margin: 0px;
  color: #333;
  --type-first: Helvetica, Arial, sans-serif;/*ai eu criei uma variável para as tipografias, e variável se cria assim*/
  --type-second: 'Spectral', Georgia;
  font-family: var(--type-first);/*essas variaveis sempre defina no body pq é o item maximo e eu sempre vou ter acesso a elas em qualquer lugar*/
  padding: 4rem;
}

h1, h2, h3, h4, p {
  margin: 0px;
}

ul, li {
  list-style: none;
  margin: 0px;
  padding: 0px;
}

img {
  display: block;
  max-width: 100%;
}

button, input {
  display: block;
  font-size: 1rem;
  font-family: var(--type-first);
  color: #333;
}

.container {
  max-width: 50rem;
  padding: 0 1rem;
  margin: 0 auto;
}

.mainContainer {
  margin-top: 2rem;
}

a {
  text-decoration: none;
  color: #333;
}

.title {
  font-family: var(--type-second);
  line-height: 1;
  font-size: 3rem;
  margin: 1rem 0;
  position: relative;
  z-index: 1;
}

.title::after {
  content: '';
  display: block;
  width: 1.5rem;
  height: 1.5rem;
  background: #fb1;
  position: absolute;
  bottom: 5px;
  left: -5px;
  border-radius: 0.2rem;
  z-index: -1;
}

.animeLeft {
  opacity: 0;
  transform: translateX(-20px);
  animation: animeLeft 0.3s forwards;
}

@keyframes animeLeft {
  to {
    opacity: 1;
    transform: initial;
  }
}

.App {
  display: flex;
  flex-direction: column;
  min-height: calc(100vh + 10rem);/*100vh + o total do footer q eu coloquei la 10rem*/
}

.AppBody {
  flex: 1;/*ai ele vai se expandir*/
}

.VictoryContainer {
  height: initial !important;/*tive que fazer isso para alinhar os itens do gráfico no meio essa classe ja vem na biblioteca e eu tenho q colocar como initial, pq ele vem como 100%*/
}